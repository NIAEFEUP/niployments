---
apiVersion: v1
kind: Namespace
metadata:
  name: testing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mongodb-kubernetes-operator
  namespace: testing
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mongodbcommunity.mongodb.com
  resources:
  - mongodbcommunity
  - mongodbcommunity/status
  - mongodbcommunity/spec
  - mongodbcommunity/finalizers
  verbs:
  - get
  - patch
  - list
  - update
  - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mongodb-kubernetes-operator
  namespace: testing
subjects:
- kind: ServiceAccount
  name: mongodb-kubernetes-operator
roleRef:
  kind: Role
  name: mongodb-kubernetes-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb-kubernetes-operator
  namespace: testing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb-database
  namespace: testing
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mongodb-database
  namespace: testing
subjects:
- kind: ServiceAccount
  name: mongodb-database
roleRef:
  kind: Role
  name: mongodb-database
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mongodb-database
  namespace: testing
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - patch
      - delete
      - get
---
apiVersion: mongodbcommunity.mongodb.com/v1
kind: MongoDBCommunity
metadata:
  name: mongodb-apps
  namespace: mongodb
spec:
  members: 3
  type: ReplicaSet
  version: 6.0.5
  security:
    authentication:
      modes:
      - SCRAM
  users:
  - db: admin
    name: adminuser
    passwordSecretRef:
      name: mongodb-apps-adminuser-credentials
    roles:
    - db: admin
      name: root
    - db: testingdb
      name: root
    scramCredentialsSecretName: mongodb-apps-adminuser
  - connectionStringSecretName: testinguser-mongodb-secret
    connectionStringSecretNamespace: testing
    db: testingdb
    name: testinguser
    passwordSecretRef:
      name: mongodb-apps-testinguser-credentials
    roles:
    - db: testingdb
      name: readWrite
    scramCredentialsSecretName: mongodb-apps-testinguser
  statefulSet:
    spec:
      volumeClaimTemplates:
      - metadata:
          name: data-volume
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 5Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-apps-adminuser-credentials
  namespace: mongodb
type: Opaque
stringData:
  password: my-passwd
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-apps-testinguser-credentials
  namespace: mongodb
type: Opaque
stringData:
  password: my-passwd
