#https://developer.hashicorp.com/vault/docs/platform/k8s/helm/configuration
global:
  enabled: true
  tlsDisable: false
  namespace: vault

server:
  dev:
    enabled: false
  logLevel: debug
  extraEnvironmentVars:
      VAULT_CACERT: /opt/vault/tls/ca.crt
      VAULT_TLSCERT: /opt/vault/tls/tls.crt
      VAULT_TLSKEY: /opt/vault/tls/tls.key
  volumes:
    - name: tls
      secret:
        secretName: vault-cluster-ca-secret
  volumeMounts:
    - name: tls
      mountPath: "/opt/vault/tls"
      readOnly: true
  dataStorage:
    enabled: true
    size: 2Gi
    storageClass: longhorn-locality-retain
    mountPath: "/opt/vault/raft"
    accessMode: ReadWriteOnce
  ha:
    enabled: true
    raft:
      enabled: true
      replicas: 3
      setNodeId: true
      config: |
        ui = true
        disable_mlock = true # avoids out of memory errors by blocking swapping of its virtual pages
    
        listener "tcp" {
          address = "0.0.0.0:8200"
          cluster_address = "0.0.0.0:8201"
          tls_disable = "false"
          tls_cert_file      = "/opt/vault/tls/tls.crt"
          tls_key_file       = "/opt/vault/tls/tls.key"
          tls_client_ca_file = "/opt/vault/tls/ca.crt" # certificate of the CA root
        }

        storage "raft" {
          path = "/opt/vault/raft"

          retry_join {
            leader_api_addr = "https://vault-0.vault-internal:8200"
            leader_ca_cert_file = "/opt/vault/tls/ca.crt"
            leader_client_cert_file = "/opt/vault/tls/tls.crt"
            leader_client_key_file = "/opt/vault/tls/tls.key"
          }

          retry_join {
            leader_api_addr = "https://vault-1.vault-internal:8200"
            leader_ca_cert_file = "/opt/vault/tls/ca.crt"
            leader_client_cert_file = "/opt/vault/tls/tls.crt"
            leader_client_key_file = "/opt/vault/tls/tls.key"
          }

          retry_join {
            leader_api_addr = "https://vault-2.vault-internal:8200"
            leader_ca_cert_file = "/opt/vault/tls/ca.crt"
            leader_client_cert_file = "/opt/vault/tls/tls.crt"
            leader_client_key_file = "/opt/vault/tls/tls.key"
          }

          autopilot {
            cleanup_dead_servers = "true"
            last_contact_threshold = "10s"
            max_trailing_logs = 250000
            min_quorum = 2
            server_stabilization_time = "10s"
          }
        }

ui:
  enabled: true
  serviceType: "LoadBalancer"
  targetPort: 8200
  externalPort: 8200


       
injector:
  enabled: "false"
