# Generated by Anaconda 34.25.3.8
# Generated by pykickstart v3.32
#version=RHEL9
# Use text install
text
# Use CDROM installation media
cdrom
repo --name=NInux --baseurl=file:///run/install/repo/NInux

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

# Keyboard layouts
keyboard --xlayouts='pt'
# System language
lang en_US.UTF-8

%packages
@^minimal-environment
@standard
# Test if upgrades work
avahi
avahi-tools
dhcpcd

%end

# by default configure dhcp on all interfaces
network --bootproto dhcp 
# Run the Setup Agent on first boot
firstboot --enable

# Generated using Blivet version 3.6.0
# Partition clearing information
clearpart --all --drives=sda --initlabel
autopart --nohome

bootloader --append="intel_iommu=on"

timesource --ntp-disable
# System timezone
timezone Europe/Lisbon --utc

#Root password
rootpw --lock
user --groups=wheel --name=ni --password=$6$YaHMYMt76rYg5FAt$NIShgVJ3CxGk1EE/aCAh8QiT3vkIGKTgwQUeW6SEqJAwF4u8aijcMr0X38u1C0NeTesi90AlILQLzOL8WQW6T/ --iscrypted --gecos="NI"

reboot --eject

%post

mkdir -p /home/ni/.ssh  

echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILsKR9mYAnehjbCFWLYX+OKUUr1tS6qV/rlg+ax4kbcG bootstrap@unsecure' > /home/ni/.ssh/authorized_keys

systemctl enable sshd

if [ "$(arch)" = "x86_64" ]; then
  dnf install grub2-pc-modules grub2-pc -y
  grub2-install --target=i386-pc /dev/sda
fi

# Make ni run sudo passwordless, it's secure because ni will be only be accessed in cluster installations
#  or upgrades
install \
    -o root -g root -m400 \
    <(echo -e 'ni\tALL=(ALL)\tNOPASSWD:\tALL') \
    /etc/sudoers.d/freewheelers

# vagrant needs temporary files on the etc folder so in order to solve them we add the /etc
# TODO: fix this in the ansible side later
chmod +x /etc

# Avahi related configs, for cluster bootstrapping in order to to use IPV4LL

sed -i 's/publish-workstation=no/publish-workstation=yes/g' /etc/avahi/avahi-daemon.conf 

echo "[main]
dhcp=dhcpcd" > /etc/NetworkManager/conf.d/dhcp-client.conf

# Disable NetworkManager and use dhcpcd instead to use IPv4LL (NetworkManager configuration is buggy, at best)
#  we enable NetworkManager again when the full network is configured.

# TODO(luisd): enable NetworkManager on ansible side after network configuration
systemctl disable NetworkManager
systemctl enable dhcpcd 

# Firewalld causes more problems than it help, on cluster bootstrapping. It interferes with RKE2 and mDNS,
#   making the cluster more difficult to deploy. In the future we can reenable-it and whitelist what's needed.
systemctl disable firewalld
%end