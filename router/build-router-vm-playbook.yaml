- name: Build router VM in hosts that have the appropriate NICs
  hosts: controlplane[0]
  tasks:
    - name: Get PCI devices to find appropriate NICs
      ansible.utils.cli_parse:
        command: lspci -n
        parser:
          name: ansible.netcommon.native
          template_path: router/templates/lspci-parser.yaml
        set_fact: pci_devices
    - name: Only include nodes that have suitable devices
      # FIXME (luisd): use vars instead of hardcoding vendor and device id
      when: '"8086:1528" in (pci_devices | dict2items | map(attribute="value") | map(attribute="pci_vendor_device"))'
      block:
        - name: Check if router VM exists
          become: true
          community.libvirt.virt:
            command: list_vms
          register: routervm_stat
        - name: Build new router VM
          when: '"routerVM" not in routervm_stat.list_vms'
          block:
            - name: Build VM disk image
              ansible.builtin.include_tasks:
                file: "vm-image-task.ansible.yaml"
            - name: Create VM for router
              become: true
              community.libvirt.virt:
                autostart: true
                name: routerVM
                command: define
                xml: "{{ lookup('template', 'templates/libvirt-xml.j2') }}"
            - name: Start VM
              become: true
              community.libvirt.virt:
                name: routerVM
                state: running
